import os
import telebot
from telebot import types
import sqlite3
from create_db import create_db
import db_functions
import time

BOT_TOKEN = os.environ.get('BOT_TOKEN')

bot = telebot.TeleBot(BOT_TOKEN, parse_mode='HTML')
user = bot.get_me()

connect = sqlite3.connect('database.db')
cursor = connect.cursor()
cursor.execute('SELECT * FROM users')
users = cursor.fetchall()

total_users = len(users)



photos_id = []
videos_id = []
documents_id = []

admins = ["list of useradmin id"]
admins_usersnames = []
caption_photo = []
caption_video = []

photos_id_to_use = []
video_id_to_use = []
document_id_to_use = []

users_id_to_delete = []


def main_admin_markup():
    markup = types.InlineKeyboardMarkup()
    markup.row_width = 3
    markup.add(types.InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="/send_msg"),
               types.InlineKeyboardButton("–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å", callback_data="/usr_stats")
               )
    
    return markup

def main_users_markup():
    markup = types.InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(types.InlineKeyboardButton("–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", url='https://t.me/proweb_support'),
               types.InlineKeyboardButton("–ö–æ–≤–æ—Ä–∫–∏–Ω–≥", callback_data="/coworking"),
               types.InlineKeyboardButton("–ö–æ–Ω–∫—É—Ä—Å—ã", callback_data="/contests"),
               types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç", url="https://proweb.uz"),
               types.InlineKeyboardButton("–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å", callback_data="/basic_course"),
               types.InlineKeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="/reviews"),
               types.InlineKeyboardButton("–ü—Ä–∞–≤–∏–ª–∞ –æ–±—É—á–µ–Ω–∏—è", callback_data="/learning_rules"))
    
    return markup


def nav_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_m = types.KeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é")
    item_h = types.KeyboardButton('Help ‚ùì')
    markup.row(item_m,item_h)
    return markup


def send_markup():
    markup = types.InlineKeyboardMarkup()
    markup.row_width = 3
    markup.add(
        types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="/cancel"),
        types.InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="/send")
               )
    
    return markup

def whats_next():
    markup = types.InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(
        # types.InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å", callback_data="/show_msg"),
        types.InlineKeyboardButton("–ó–∞–∫—Ä–µ–ø–∏—Ç—å", callback_data="/pinn_msg"),
        types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å", callback_data="/dell_msg"),
               )
    return markup



for user in users:
    for admin in admins:
        if admin in user:
            admins_usersnames.append(user[1])

  
def get_adm_names():
    return " ,".join(admins_usersnames)

@bot.message_handler(commands=['start'])
def handle_command(message):
    id = message.from_user.id
    username = message.from_user.username
    msg_id = id
    db_functions.add_user(id, username, msg_id)

    if message.chat.id in admins:

        bot.send_message(message.chat.id, 
                    "–î–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ —Ü–µ–Ω—Ç—Ä–∞ <b>PROWEB</b> \n \n" +
                    "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞: \n \n" +

                    '&#9632 <b>–†–∞—Å—Å—ã–ª–∫–∞/–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π</b> - (text, photo, video, document, media-group, poll) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º \n \n' +
                    '&#9632 <b>–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π</b> \n \n' +
                    '&#9632 <b>–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π</b> \n \n' +
                    '&#9632 <b>–û—Ç—á–µ—Ç –ø–æ—Å–ª–µ –†–∞—Å—Å—ã–ª–∫–∏/–ü–µ—Ä–µ—Å—ã–ª–∫–∏</b> -  –∫–æ–ª-–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–∏ \n \n' +
                    '&#9632 <b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å</b> - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: –∞–∫—Ç–∏–≤/–Ω–µ –∞–∫—Ç–∏–≤ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞) \n \n' +
                    '–ß–µ–º –∑–∞–π–º–µ–º—Å—è?'
                      ,reply_markup=main_admin_markup())

    else:
        bot.send_message(message.chat.id, '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –∫—É—Ä—Å–æ–≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π PROWEB! ü§ó', reply_markup = nav_markup())
        bot.send_message(message.chat.id, 
                         '–î–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Ü–µ–Ω—Ç—Ä–∞ <b>PROWEB</b>. \n \n' +
                         '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞: \n \n' +
                         '&#9632 <b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b> - –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –≤–∞—à–∏–º –æ–±—É—á–µ–Ω–∏–µ–º, –∏ –ø–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. \n \n' +
                         '&#9632 <b>–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b> - —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏ —Ä–µ—à–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ –ø–æ–º–æ—â—å –≤ —Å–±–æ—Ä–∫–µ –ª–∏—á–Ω–æ–≥–æ –∫–æ–º—å—é—Ç–µ—Ä–∞. \n \n' +
                         '&#9632 <b>–ö–æ–≤–æ—Ä–∫–∏–Ω–≥</b> - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–≤–æ—Ä–∫–∏–Ω–≥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ. \n \n' +
                         '&#9632 <b>–ö–æ–Ω–∫—É—Ä—Å—ã</b> - –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –µ–∂–µ–º–µ—Å–µ—á–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö, –≥–¥–µ –º–æ–∂–Ω–æ –≤—ã–∏–≥—Ä–∞—Ç—å —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã. \n \n' +
                         '&#9632 <b>–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç</b> - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ü–µ–Ω—Ç—Ä–∞ PROWEB, –≥–¥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å—é –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω—Ç—Ä–µ –∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö. \n \n' +
                         '&#9632 <b>–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å</b> - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏. \n \n' +
                         '&#9632 <b>–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</b> - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–∏—è—Ç–Ω—ã–º–∏ –≤–ø–µ—á–µ—Ç–ª–µ–Ω–∏—è–º–∏ –æ–± –æ–±—É—á–µ–Ω–∏–∏ –≤ —Ü–µ–Ω—Ç—Ä–µ PROWEB. –ï—Å–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ. –ú—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∫–∞–∂–¥–æ–º—É –æ—Ç–∑—ã–≤—É. \n \n' +                         
                         '&#9632 <b>–ü—Ä–∞–≤–∏–ª–∞ –æ–±—É—á–µ–Ω–∏—è</b> - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –æ–±—É—á–µ–Ω–∏—è –≤ —Ü–µ–Ω—Ç—Ä–µ PROWEB \n \n' +
                         '&#9632 <b>–ù–∞ –≥–ª–∞–≤–Ω—É—é</b> - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–æ—Ç–∞ –∏ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. \n \n' +
                         '&#9632 <b>Ozbek tili</b> - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ —É–∑–±–µ–∫—Å–∫–∏–π.'
                        ,reply_markup=main_users_markup())
      



@bot.message_handler(commands=['help'])
def help_command(message):
   keyboard = telebot.types.InlineKeyboardMarkup()
   keyboard.add(
       telebot.types.InlineKeyboardButton(
           '–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É', url='telegram.me/darl1ne'
           
       )
   )
   bot.send_message(
       message.chat.id,
       '1) \n' +
       '2) \n' +
       '3) \n' +
       '4) \n' +
       '5) ',
       reply_markup=keyboard
   )




@bot.callback_query_handler(func=lambda call: call.message.chat.id in admins)
def callback_query(call):
    global messages
    caption_photo_str = ''.join(caption_photo)
    caption_video_str = ''.join(caption_video)
    
    if call.data == '/usr_stats':
        bot.send_message(call.message.chat.id, 
                " <b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ—Ç—á–µ—Ç:</b> \n \n" +
                "–í—Å–µ–≥–æ –≤ –±–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + str(total_users) + "\n"
                "–ê–¥–º–∏–Ω–æ–≤ –±–æ—Ç–∞:" +str(len(admins_usersnames)) + "\n"  + get_adm_names()                                    
                )
                        
    elif call.data == '/send_msg':
        bot.send_message(call.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–Ω–æ –±—É–¥–µ—Ç —Ä–∞–∑–æ—Å–ª–∞–Ω–æ –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:' , reply_markup=nav_markup())
        
    elif call.data == '/send':        
        bot.delete_message(call.message.chat.id, call.message.message_id)
        connect = sqlite3.connect('database.db')
        cursor = connect.cursor()
        cursor.execute('SELECT id FROM users')
        users = cursor.fetchall()
        cursor.execute('SELECT * FROM messages ORDER BY id DESC LIMIT 1')
        
        messages = cursor.fetchall()
        msg_id = messages[0][0]
        
        active_users = 0
        block_users = 0               

        for user in users:
            for user_id in user:
                media = []
                if call.message.reply_to_message.content_type == 'poll':
                    try:
                        active_users += 1                        
                        
                        s = bot.forward_message(user_id, message_id=msg_id, from_chat_id=call.message.chat.id).message_id 
                    except:
                        block_users += 1
                    m = str(s)
                    db_functions.update_value(m, user_id)
                
                elif call.message.reply_to_message.content_type == 'photo':
                    for index, photo in enumerate(photos_id):
                        if index == 0:
                            media.append(types.InputMediaPhoto(media=photo, caption=caption_photo_str))
                        else:   
                            media.append(types.InputMediaPhoto(media=photo))                  
                    try:
                        s = bot.send_media_group(user_id, media)
                        active_users += 1
                        for i in s:
                            q = i.message_id
                            c = i.chat.id
                            photos_id_to_use.append((q, c))
                    
                    except:
                        block_users += 1
                    
                
                elif call.message.reply_to_message.content_type == 'video':
                    for index, video in enumerate(videos_id):
                        if index == 0:
                            media.append(types.InputMediaVideo(media=video, caption=caption_video_str))
                        else:   
                            media.append(types.InputMediaVideo(media=video))
                    
                    try:
                        s = bot.send_video(user_id, video=video, caption=caption_video_str)
                        active_users += 1
                    except:
                        block_users += 1
                    q = s.message_id
                    c = s.chat.id
                    video_id_to_use.append((q, c))
                elif call.message.reply_to_message.content_type == 'text':
                    try:
                        s = bot.copy_message(chat_id=user_id, from_chat_id=call.message.chat.id, message_id=msg_id).message_id  
                        active_users += 1
                        active_user_list += 1
                    except:
                        block_users += 1
                    m = str(s)     
                    db_functions.update_value(m, user_id)
            
                elif call.message.reply_to_message.content_type == 'document':
                    for doc_id in documents_id:
                        media.append(types.InputMediaDocument(media=doc_id))

                    try:
                        s = bot.send_document(user_id, document=doc_id)
                        active_users += 1
                    except:
                        block_users += 1
                
                    
                    q = s.message_id
                    c = s.chat.id
                    document_id_to_use.append((q, c))
                    
                

        loader =  bot.send_message(call.message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è,–æ–∂–∏–¥–∞–π—Ç–µ..')
        time.sleep(3)
        bot.delete_message(call.message.chat.id, loader.id)
        bot.send_message(call.message.chat.id, 
                     " <b>–ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç:</b> \n \n" +
                     "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + str(active_users) + "\n"
                     "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + str(block_users) + "\n \n"
                     "–í—Å–µ–≥–æ –≤ –±–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + str(total_users) + "\n"
                     "–ò–∑ –Ω–∏—Ö –∞–¥–º–∏–Ω–æ–≤:" +str(len(admins)) + "\n"
                     )
        bot.reply_to(call.message.reply_to_message, 
                         " <b>–ß—Ç–æ –¥–∞–ª—å—à–µ?:</b> \n \n" 
                         , reply_markup=whats_next())
        
        time.sleep(3)


    elif call.data == '/cancel':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        
        handle_command(call.message)
    

    elif call.data == '/pinn_msg':
        connect = sqlite3.connect('database.db')
        cursor = connect.cursor()
        cursor.execute('SELECT * FROM users')
        users = cursor.fetchall()

        pin_count = 0
        unp_count = 0
        if call.message.reply_to_message.content_type == 'photo':
            for i in photos_id_to_use:
                bot.pin_chat_message(chat_id = i[1], message_id = i[0])
                
        elif call.message.reply_to_message.content_type == 'video':
            for i in video_id_to_use:
                bot.pin_chat_message(chat_id = i[1], message_id = i[0])

        elif call.message.reply_to_message.content_type == 'text':
            for user in users:
                user_id = user[0]
                user_msg_id = user[2]
                try:
                    bot.pin_chat_message(chat_id = user_id, message_id = user_msg_id)
                    pin_count += 1
                except:
                    unp_count += 1


        elif call.message.reply_to_message.content_type == 'document':
            for i in document_id_to_use:
                try:
                    bot.pin_chat_message(chat_id = i[1], message_id = i[0])
                    pin_count += 1
                except:
                    unp_count += 1
        elif call.message.reply_to_message.content_type == 'poll':
            for user in users:
                user_id = user[0]
                user_msg_id = user[2]
                try:
                    bot.pin_chat_message(chat_id = user_id, message_id = user_msg_id)
                    pin_count += 1
                except:
                    unp_count += 1

        bot.send_message(call.message.chat.id, 
                             " <b>–ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç:</b> \n \n" +
                     "–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ: " + str(pin_count) + "\n"
                     "–ù–µ—É–¥–∞–ª–æ—Å—å: " + str(unp_count) + "\n \n"
                     "–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: " + str(total_users) + "\n")
            
        time.sleep(3)
        handle_command(call.message)
        
        
    elif call.data == '/dell_msg':
        connect = sqlite3.connect('database.db')
        cursor = connect.cursor()
        cursor.execute('SELECT * FROM users')
        users = cursor.fetchall()
        del_count = 0
        fail_cout = 0
        # users_count = len(users)

        if call.message.reply_to_message.content_type == 'photo':
            for i in photos_id_to_use:
                try:
                    bot.delete_message(chat_id = i[1], message_id = i[0])
                    del_count += 1
            
                except:
                    fail_cout += 1

        elif call.message.reply_to_message.content_type == 'video':
            for i in video_id_to_use:
                try:
                    del_count += 1
                    bot.delete_message(chat_id = i[1], message_id = i[0])
            
                except:
                    fail_cout += 1
        
        elif call.message.reply_to_message.content_type == 'document':
            for i in document_id_to_use:
                try:
                    del_count += 1
                    bot.delete_message(chat_id = i[1], message_id = i[0])
            
                except:
                    fail_cout += 1
        
        elif call.message.reply_to_message.content_type == 'text':
            for user in users:
                user_id = user[0]
                user_msg_id = user[2]
                try:
                    del_count += 1
                    bot.delete_message(chat_id = user_id, message_id = user_msg_id)
                except:
                    fail_cout += 1

        elif call.message.reply_to_message.content_type == 'poll':
            for user in users:
                user_id = user[0]
                user_msg_id = user[2]
                try:
                    del_count += 1
                    bot.delete_message(chat_id = user_id, message_id = user_msg_id)
                except:
                    fail_cout += 1

        bot.send_message(call.message.chat.id, 
                             " <b>–ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç:</b> \n \n" +
                     "–£–¥–∞–ª–µ–Ω–æ: " + str(del_count) + "\n"
                     "–ù–µ—É–¥–∞–ª–æ—Å—å: " + str(fail_cout) + "\n \n"
                     "–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + str(total_users) + "\n")
            
        time.sleep(3)
        handle_command(call.message)


@bot.callback_query_handler(func=lambda call: call.message.chat.id not in admins)
def usr_callback_query(call):
    if call.data == '/coworking':
        bot.send_message(call.message.chat.id, 
                         '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–µ—Ç–∏—Ç—å –∫–æ–≤–æ—Ä–∫–∏–Ω–≥, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–π—Ç–∏. –ö–æ–≤–æ—Ä–∫–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö, —Å 9:00 –¥–æ 21:00. \n \n' +
                         '–î–ª—è –∑–∞–ø–∏—Å–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ –≤ Telegram. \n \n' +
                         '<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b> \n \n' +
                         '<b>–ß–ò–õ–ê–ù–ó–ê–†</b> \n Telegram: t.me/proweb_coworking \n –¢–µ–ª: +998 99 531 66 32 \n \n' +
                         '<b>–û–ô–ë–ï–ö</b> \n Telegram: t.me/coworking_oybek \n –¢–µ–ª: +998 94 210 35 35 \n \n' +
                         '<b>–û–ô–ë–ï–ö 2</b> \n Telegram: t.me/proweb_oybek2 \n –¢–µ–ª: +998 94 210 34 34 \n \n' 
                         )
    if call.data == '/contests':
        bot.send_message(call.message.chat.id,
                         '‚Äç –ï–∂–µ–º–µ—Å—è—á–Ω–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Ü–µ–Ω—Ç—Ä–∞ <b>PROWEB</b> –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –∫–æ–Ω–∫—É—Ä—Å—ã —Å —Ü–µ–Ω–Ω—ã–º–∏ –ø—Ä–∏–∑–∞–º–∏! üéâ  \n \n' +
                         '–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –≤–∞–∂–Ω–æ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. \n \n' +
                         '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∫–æ–Ω–∫—É—Ä—Å–æ–≤ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ª–∏—á–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ —É–¥–∞–ª—è—Ç—å –∏ –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞. \n \n'+ 
                         '–¢–∞–∫–∂–µ –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω–∫—É—Ä—Å—ã –¥–ª—è –Ω–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ <a href="https://www.instagram.com/proweb.uz/">Instagram</a> , <a href="https://www.youtube.com/channel/UCyxKtTHz9mN-ospm1vrkYPQ">Youtube</a>, <a href="http://t.me/proweb">Telegram</a>, <a href="https://facebook.com/proweb.uz">Facebook</a> - –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ —Å—Ä–∞–∑—É –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö. \n \n' +
                         '–í—Å–µ–º —É–¥–∞—á–∏, —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å –µ—Å—Ç—å —É –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞! üçÄ'
                         )
        
    if call.data == '/basic_course':
        markup = types.InlineKeyboardMarkup()
        markup.row_width = 1
        markup.add(
            types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–∞–∑–æ–≤—ã–π –∫—É—Ä—Å (–ß–∏–ª–∞–Ω–∑–∞—Ä)", url="https://t.me/proweb_basic"),
            types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–∞–∑–æ–≤—ã–π –∫—É—Ä—Å (–ê–π–±–µ–∫)", url="https://t.me/proweb_base_oybek")
                )
        bot.send_message(call.message.chat.id, 
                              '–í—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∫–æ–º—å—é—Ç–µ—Ä–µ, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º —Ö–æ—Ç–∏—Ç–µ –æ–±—É—á–∞—Ç—å—Å—è –≤ <b>PROWEB</b>? –° –Ω–∞—à–∏–º –±–∞–∑–æ–≤—ã–º –∫—É—Ä—Å–æ–º —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ. –î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –ø—Ä–æ—Å—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É <b>‚Äú–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–∞–∑–æ–≤—ã–π –∫—É—Ä—Å‚Äù</b> –∏ –Ω–∞—à –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤–∞—Å –ø–æ–¥—Ä–æ–±–Ω–æ –æ–±–æ –≤—Å—ë–º –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç.' + '<a href="https://telegra.ph/file/f67524120efa0ff0e7436.jpg"></a>'
                              , reply_markup=markup)
        
    if call.data == '/reviews':
        markup = types.InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(
            types.InlineKeyboardButton("–û—Ç–∑—ã–≤—ã üòç", url="https://proweb.uz/reviews-page"),
            types.InlineKeyboardButton("–ñ–∞–ª–æ–±—ã –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è üòî", callback_data = '/test')
                )
        
        bot.send_message(call.message.chat.id,
                         '–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –æ–±—É—á–µ–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ <b>PROWEB</b> –∏ –≤–∞–º –Ω–µ —Ç—Ä—É–¥–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –æ–± —ç—Ç–æ–º –≤ –Ω–∞—à–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö? –¢–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ <b>‚Äú–û—Ç–∑—ã–≤—ã‚Äù</b> –∏ –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è, –º—ã –±—É–¥–µ–º –æ—á–µ–Ω—å –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã. \n \n'

                         '–£ –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –≤–æ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è –∏–ª–∏ –≤–∞–º —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∞ –º–æ–∂–µ—Ç –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è? –¢–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ <b>‚Äú–ñ–∞–ª–æ–±—ã –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è‚Äù</b>, —Ä–∞—Å–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏ –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –Ω–∞—à —É—á–µ–±–Ω—ã–π —Ü–µ–Ω—Ç—Ä.'
                         , reply_markup=markup)
        
        if call.data == '/learning_rules':
            bot.send_message(call.message.chat.id, 
                             '<b>–ü—Ä–∞–≤–∏–ª–∞ –æ–±—É—á–µ–Ω–∏—è –≤ —É—á–µ–±–Ω–æ–º —Ü–µ–Ω—Ç—Ä–µ PROWEB</b> \n \n'
                             '1. –í –æ–¥–Ω–æ–º —É—á–µ–±–Ω–æ–º –º–µ—Å—è—Ü–µ - 8 –∑–∞–Ω—è—Ç–∏–π. –°—Ç—É–¥–µ–Ω—Ç–∞–º, –æ–ø–ª–∞—Ç–∏–≤—à–∏–º –º–µ—Å—è—Ü –æ–±—É—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è 8 –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –ø–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–º—É –≥—Ä–∞—Ñ–∏–∫—É. \n \n' 

                             '2. –ï—Å–ª–∏ —É—Ä–æ–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è –≤ —Å–≤—è–∑–∏ —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º –∏–ª–∏ –ø–æ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è, —É—Ä–æ–∫ –Ω–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ –Ω–µ —Å–≥–æ—Ä–∞–µ—Ç, –∞ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è. –ü–æ–∫–∞ –≤—Å–µ 8 –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –Ω–µ –±—É–¥—É—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω—ã, —É—á–µ–±–Ω—ã–π –º–µ—Å—è—Ü –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è. \n \n'

                             '3. –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—Ä–æ–∫, –¥–∞–Ω–Ω—ã–π —É—Ä–æ–∫ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç —Å–æ—Å—Ç–æ–∏—Ç –≤ Telegram –≥—Ä—É–ø–ø–µ, –≤ –∫–æ—Ç–æ—Ä—É—é —Å–∫–∏–¥—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π —É—Ä–æ–∫ –≤ –≤–∏–¥–µ–æ —Ñ–æ—Ä–º–∞—Ç–µ. \n \n'

                             '4. –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–æ—Å–µ—Ç–∏—Ç—å —É—Ä–æ–∫, –æ–Ω –¥–æ–ª–∂–µ–Ω –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å –æ–± —ç—Ç–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ <a href="http://t.me/proweb_admin">–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é.</a>  \n \n'

                             '5. –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –ø—Ä–æ–ø—É—Å—Ç–∏–ª —É—Ä–æ–∫, —Ç–æ –µ–º—É —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—Å–µ—Ç–∏—Ç—å <a href="http://t.me/proweb_coworking">–∫–æ–≤–æ—Ä–∫–∏–Ω–≥</a>, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –≤—Å–µ—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π. <a href="http://t.me/proweb_coworking">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥–∞</a> –º–æ–≥—É—Ç –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—É—é —Ç–µ–º—É –∏ –ø–æ–º–æ—á—å –≤ —Å–ª–æ–∂–Ω—ã—Ö —É—á–µ–±–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö. \n \n'

                             '–í –ø–µ—Ä–∏–æ–¥ –æ–±—É—á–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç –º–æ–∂–µ—Ç –ø–æ—Å–µ—â–∞—Ç—å <a href="http://t.me/proweb_coworking">–∫–æ–≤–æ—Ä–∫–∏–Ω–≥</a> –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –∑–∞—Ä–∞–Ω–µ–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—è—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è. –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å <a href="http://t.me/proweb_coworking">–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∫–æ–≤–æ—Ä–∫–∏–Ω–≥–∞</a> –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ. \n \n'

                             '–ü–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –∫—É—Ä—Å–∞, –∏–ª–∏ —É–∂–µ –≤–æ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è, —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Å –ø–ª–æ—Ö–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ <a href="http://t.me/proweb_basic">–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–∞–∑–æ–≤—ã–π –∫—É—Ä—Å</a>. –ó–∞ –º–µ—Å—è—Ü —Å—Ç—É–¥–µ–Ω—Ç—ã –∏–∑—É—á–∞—Ç –æ—Å–Ω–æ–≤—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏. –û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∫—É—Ä—Å–æ–º. –î–ª—è –∑–∞–ø–∏—Å–∏ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ <a href="http://t.me/proweb_basic">Telegram</a>. \n \n'

                             '8. –ö–∞–∂–¥—ã–π —Å—Ç—É–¥–µ–Ω—Ç —É—á–µ–±–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ PROWEB –¥–æ–ª–∂–µ–Ω –≤–Ω–æ—Å–∏—Ç—å —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—É—é –æ–ø–ª–∞—Ç—É –∑–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –æ–±—É—á–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª–µ —É—á–µ–±–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞, –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã. –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –∏–º–µ–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, —Ç–æ <a href="http://t.me/proweb_admin">–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</a> –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ–¥–µ–ª—å–Ω—É—é –æ—Ç—Å—Ä–æ—á–∫—É –≤ –≤—ã–ø–ª–∞—Ç–µ, –ª–∏–±–æ —Å—Ç—É–¥–µ–Ω—Ç –º–æ–∂–µ—Ç –≤–Ω–æ—Å–∏—Ç—å —á–∞—Å—Ç–∏—á–Ω—É—é –æ–ø–ª–∞—Ç—É –≤ –ø–µ—Ä–∏–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –æ–±—É—á–µ–Ω–∏—è. \n \n'
                             
                             '9. –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –≤–Ω–æ—Å–∏—Ç —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—É—é –æ–ø–ª–∞—Ç—É –∏ –Ω–µ –ø–æ—Å–µ—â–∞–µ—Ç –±–æ–ª–µ–µ —Ç—Ä–µ—Ö —É—Ä–æ–∫–æ–≤ –±–µ–∑ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã, —Ç–æ –¥–∞–Ω–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–∫–ª—é—á–∞–µ—Ç—Å—è –∏–∑ –≥—Ä—É–ø–ø—ã. –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É —Å—Ç—É–¥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–≥–∞—Å–∏—Ç—å –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å, —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ–Ω –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É, –µ—Å–ª–∏ —Ç–∞ –Ω–µ —É—à–ª–∞ –≤–ø–µ—Ä—ë–¥. –õ–∏–±–æ <a href="http://t.me/proweb_admin">–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</a>  –ø–æ–¥–±–µ—Ä–µ—Ç –≥—Ä—É–ø–ø—É, –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–∞–Ω–Ω–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É. \n \n'
            
                            '10. –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç —Ö–æ—á–µ—Ç –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –∏–ª–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ, –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å <a href="http://t.me/proweb_admin">–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é</a> –∏ –æ–±—ä—è—Å–Ω–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É, —á—Ç–æ–±—ã –±—É–¥—É—â–∏–µ —É—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –±—É–¥–µ—Ç –ø–æ—Å–µ—â–∞—Ç—å, –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–ª–∏—Å—å. <a href="http://t.me/proweb_admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</a> —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –æ–±—É—á–µ–Ω–∏–µ –∏ —É–¥–∞–ª–∏—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ Telegram –≥—Ä—É–ø–ø—ã. \n \n'

                           '11. –°—Ç—É–¥–µ–Ω—Ç, –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–≤—à–∏–π –æ–±—É—á–µ–Ω–∏–µ, –º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ—ë –æ–±—É—á–µ–Ω–∏–µ —Ä–æ–≤–Ω–æ —Å —Ç–æ–≥–æ –º–µ—Å—è—Ü–∞ –∏ —É—Ä–æ–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª. <a href="http://t.me/proweb_admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</a> –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø–æ–ª—É—á–∏—Ç—Å—è –∏–º–µ–Ω–Ω–æ –∫ —Å–≤–æ–µ–º—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é. \n \n'
                             )
            
@bot.message_handler(func=lambda message: message.chat.id in admins, content_types=['text', 'document', 'audio', 'poll', 'photo', 'video'])
def on_adm_message(message):   
    if message.content_type == 'text':
        if message.text == '–ù–∞ –≥–ª–∞–≤–Ω—É—é':
            handle_command(message)
        elif message.text == 'Help ‚ùì':
            help_command(message)
        else:
            try:
                db_functions.add_sms(message.id, message.text)
                s = bot.reply_to(message, text='–ß—Ç–æ –¥–µ–ª–∞–µ–º?', reply_markup=send_markup())
            except:
                pass
    
    elif message.content_type == 'poll':
        text = ''
        db_functions.add_sms(message.id, text)
        bot.reply_to(message, text='–ß—Ç–æ –¥–µ–ª–∞–µ–º?', reply_markup=send_markup())       
        
    elif message.content_type == 'photo':
        if message.caption:            
            caption_photo.append(message.caption) 
        m_p = message.photo[2].file_id

        photos_id.append(m_p)
        # media_id = message.media_group_id
        
        s = bot.reply_to(message, text='–ß—Ç–æ –¥–µ–ª–∞–µ–º?', reply_markup=send_markup())

    elif message.content_type == 'video':
        if message.caption:            
            caption_video.append(message.caption) 
        m_p = message.video.file_id
        
        videos_id.append(m_p)
        # media_id = message.media_group_id
        
        s = bot.reply_to(message, text='–ß—Ç–æ –¥–µ–ª–∞–µ–º?', reply_markup=send_markup())

        # print(message)


    elif message.content_type == 'document':
        d_i = message.document.file_id
        documents_id.append(d_i)
        s = bot.reply_to(message, text='–ß—Ç–æ –¥–µ–ª–∞–µ–º?', reply_markup=send_markup())


@bot.message_handler(func=lambda message: message.chat.id not in admins, content_types=['text'])
def on_adm_message(message):
    if message.text == '–ù–∞ –≥–ª–∞–≤–Ω—É—é':
            handle_command(message)
    elif message.text == 'Help ‚ùì':
            help_command(message)


            
print('Started succesful..')
create_db()
bot.infinity_polling(interval=0, timeout=20)

